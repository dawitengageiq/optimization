{"version":3,"sources":["consolidated_chart.js","consolidated_chart.min.js"],"names":["CONSOLIDATEDCHART","$","base_url","all_series","all_categories","custom_chart","chart","chart_type","chart_height","chart_spacingBottom","_setChart","type","height","spacingBottom","custom_title","title","chart_title","_setTitle","text","custom_sub_title","sub_title","chart_sub_title","_setSubTitle","custom_legend","legends","legend_enabled","legends_align","legends_vertical_align","legends_layout","legends_font_weight","legends_title_text","legends_title_font_weight","legends_title_font_style","_setLegends","enabled","align","verticalAlign","layout","itemStyle","fontWeight","style","fontStyle","exporting","exporting_enabled","_setExporting","custom_x_axis","xAxis","x_axis_categories","xAxis_crosshair","_setXAxis","categories","crosshair","offset","lineWidth","custom_y_axis","yAxis","y_axis_title","y_axis_min","y_axis_label_enable","_setYAxis","visible","min","tickWidth","labels","custom_tooltip","values_to_percent","series_has_percent","tooltip","tooltip_shared","tooltip_shadow","tooltip_split","follow_pointer","tooltip_backgroundColor","tooltip_borderColor","_point_extension","$series_name","inArray","_actualData","$yAxisData","actual_data","toLowerCase","_unshared_formatter","this","x","series","color","name","y","_shared_formatter","tooltipMarkup","points","key","index","pointsLength","length","_tooltip_formatter","_follow_pointer","_setTooltip","useHTML","shadow","shared","split","backgroundColor","borderColor","followPointer","formatter","custom_plot_options","custom_plot_column","custom_plot_series","plot_column","plot_column_pointPadding","plot_column_borderWidth","plot_column_pointRange","plot_column_pointWidth","plot_column_cursor","_setPlotColumn","pointPadding","borderWidth","pointRange","pointWidth","cursor","plot_series","plot_series_cursor","plot_series_pointPadding","_setPlotSerries","plotOptions","_setPlotOptions","column","custom_series","custom_series_click","_setSeries","_series","custom_options","options","_setOptions","subtitle","legend","_setCustomVariables2Default","custom_label","option","colors","initOptions","$colors","Highcharts","setOptions","credits","_create","$id","highcharts","public_method","init","setGeneralSeries","$all_series","setGeneralCategories","$all_categories","create","setBaseUrl","$base_url","setChart","$chart","setChartType","$chart_type","setChartHeight","$chart_height","setChartSpacingbottom","$chart_spacingBottom","setTitle","$title","setChartTitle","$chart_title","setChartSubTitle","$chart_sub_title","setLegendTitleText","$legends_title_text","setXAxis","$xAxis","setXAxisCategories","$x_axis_categories","setYAxis","$yAxis","setYAxisTitle","$y_axis_title","setYAxisLabelEnable","$y_axis_label_enable","setYAxisMin","$y_axis_min","setTooltipShared","$tooltip_shared","setFollowPointer","$follow_pointer","setLegend","$legend","setLegendEnabled","$legend_enabled","setExportingEnabled","$exporting_enabled","setSeries","$series","setLegendsValue2Percent","$values_to_percent","concat","populateActiveChart","$num","self","jQuery"],"mappings":"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","file":"consolidated_chart.min.js","sourcesContent":["var CONSOLIDATEDCHART = (function($)\r\n{\r\n    /** BOF GENERAL CHART DATA **/\r\n    // Base url container\r\n    var base_url = '';\r\n    var all_series = [];\r\n    var all_categories = [];\r\n    /** EOF GENERAL CHART DATA **/\r\n\r\n    /** BOF CHART PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_chart = false;\r\n    // Chart default variables\r\n    var chart = {};\r\n    var chart_type = 'column'; // Default type of chart. Range: bar, column ....\r\n    var chart_height = '500px'; // Default height of chart.\r\n    var chart_spacingBottom = 30; // Default spsace at the bottom of chart.\r\n    // Set chart parameters\r\n    var _setChart = function() {\r\n        if(custom_chart) return chart;\r\n        // Chart parameters\r\n        chart = {\r\n            type: chart_type,\r\n            height: chart_height,\r\n            spacingBottom: chart_spacingBottom\r\n        };\r\n        return chart;\r\n    }\r\n    /** EOF CHART PARAMETERS **/\r\n\r\n    /** BOF TITLE PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_title = false;\r\n    // Title dafault variables\r\n    var title = {};\r\n    var chart_title = 'Daily Graphs';\r\n    // Set title parameters\r\n    var _setTitle = function() {\r\n        if(custom_title) return title;\r\n        // Title parameters\r\n        title = {\r\n            text: chart_title\r\n        }\r\n        return title;\r\n    }\r\n    /** EOF TITLE PARAMETERS **/\r\n\r\n    /** BOF SUB TITLE PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_sub_title = false;\r\n    // Title dafault variables\r\n    var sub_title = {};\r\n    var chart_sub_title = 'Source: Unknown';\r\n    // Set title parameters\r\n    var _setSubTitle = function() {\r\n        if(custom_sub_title) return sub_title;\r\n        // Title parameters\r\n        sub_title = {\r\n            text: chart_sub_title\r\n        }\r\n        return sub_title;\r\n    }\r\n    /** EOF SUB TITLE PARAMETERS **/\r\n\r\n    /** BOF LEGENDS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_legend = false;\r\n    // Title dafault variables\r\n    var legends = {};\r\n    var legend_enabled = true; // Default for enable legend\r\n    var legends_align = 'right';\r\n    var legends_vertical_align = 'middle';\r\n    var legends_layout = 'vertical';\r\n    var legends_font_weight = 'normal';\r\n    var legends_title_text = 'Legends';\r\n    var legends_title_font_weight = 'bold';\r\n    var legends_title_font_style = 'italic';\r\n    // Set title parameters\r\n    var _setLegends = function() {\r\n        if(custom_legend) return legends;\r\n        // Title parameters\r\n        legends = {\r\n            enabled: legend_enabled,\r\n            align: legends_align,\r\n            verticalAlign: legends_vertical_align,\r\n            layout: legends_layout,\r\n            itemStyle: {\r\n                fontWeight: legends_font_weight\r\n            },\r\n            title: {\r\n                text: legends_title_text,\r\n                style: {\r\n                    fontWeight: legends_title_font_weight,\r\n                    fontStyle: legends_title_font_style\r\n                }\r\n            }\r\n        }\r\n\r\n        return legends;\r\n    }\r\n    /** EOF LEGENDS PARAMETERS **/\r\n\r\n    /** BOF EXPORTING PARAMETERS **/\r\n    var exporting = {};\r\n    // Exporting dafault variables\r\n    var exporting_enabled = true;\r\n\r\n    var _setExporting = function  () {\r\n        exporting = {\r\n            enabled: exporting_enabled\r\n        }\r\n        return exporting;\r\n    }\r\n    /** EOF EXPORTING PARAMETERS **/\r\n\r\n    /** BOF X-AXIS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_x_axis = false;\r\n    // X-axis default variables\r\n    var xAxis = {};\r\n    var x_axis_categories = [];\r\n    var xAxis_crosshair = true;\r\n    // Set x-axis parameters\r\n    var _setXAxis = function () {\r\n        if(custom_x_axis) return xAxis;\r\n        // X-axis parameters\r\n        xAxis = {\r\n            categories: x_axis_categories,\r\n            crosshair: xAxis_crosshair,\r\n            offset: 4,\r\n            lineWidth: 2\r\n        };\r\n        return xAxis;\r\n    }\r\n    /** EOF X-AXIS PARAMETERS **/\r\n\r\n    /** BOF Y-AXIS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_y_axis = false;\r\n    // Y-axis default variables\r\n    var yAxis = {};\r\n    var y_axis_title = '';\r\n    var y_axis_min = 0;\t// Default value for y axis min\r\n    var y_axis_label_enable = false;\r\n    // Set y-axis parameters\r\n    var _setYAxis = function (){\r\n        if(custom_y_axis) return yAxis;\r\n        // Y-axis parameters\r\n        yAxis = {\r\n            visible: true,\r\n            min: y_axis_min,\r\n            lineWidth: 2,\r\n            offset: 4,\r\n            tickWidth: 1,\r\n            title: {\r\n                text: y_axis_title\r\n            },\r\n            labels: {\r\n                enabled: y_axis_label_enable\r\n            },\r\n        };\r\n        return yAxis;\r\n    }\r\n    /** EOF Y-AXIS PARAMETERS **/\r\n\r\n    /** BOF TOOLTIP PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_tooltip = false;\r\n    // Tooltip default variables\r\n    var values_to_percent = [];\r\n    var series_has_percent = ['Margin'];\r\n    var tooltip = {};\r\n    var headerFormat = '<span style=\"font-size:10px\">{point.key}</span><table>';\r\n    var pointFormat = '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>';\r\n    var footerFormat = '</table>';\r\n    var tooltip_shared = false;\r\n    var tooltip_shadow = false;\r\n    var tooltip_split = false;\r\n    var follow_pointer = false;\r\n    var tooltip_backgroundColor = '#EEEEEE';\r\n    var tooltip_borderColor = '#286090';\r\n\r\n    // Percentage extension when\r\n    var _point_extension = function ($series_name) {\r\n        return ($.inArray($series_name ,series_has_percent) != -1) ? ' %' : '';\r\n    };\r\n\r\n    // Display actual data of converted value to percentage.\r\n    var _actualData = function ($series_name, $yAxisData){\r\n        // reverse the formula to get actual data.\r\n        var actual_data = ($.inArray($series_name ,values_to_percent) != -1 && $yAxisData > 0) ? (($yAxisData - 100) / 100) : $yAxisData;\r\n        // Add percent sign\r\n        if($series_name.toLowerCase() == 'margin') actual_data = actual_data + ' &#37;';\r\n\r\n        return actual_data;\r\n    }\r\n    // Formatter for unshared tooltip\r\n    var _unshared_formatter = function () {\r\n        return function() {\r\n            return '<span style=\"font-size:10px\">' + this.x + '</span><table>\\\r\n                    <tr><td style=\"color:' + this.series.color + ';padding:0\">' + this.series.name + ': </td>\\\r\n                    <!-- <td style=\"padding:0\"><b>' + this.y + _point_extension(this.series.name) + '</b></td></tr> -->\\\r\n                    <td style=\"padding:0\"><b>' + _actualData(this.series.name, this.y) + '</b></td></tr>\\\r\n                    </table>';\r\n\r\n        };\r\n    };\r\n    // Formatter for shared tooltip\r\n    var _shared_formatter = function () {\r\n        return function() {\r\n            var tooltipMarkup = '';\r\n            points = this.points;\r\n            if(this.points) {\r\n                tooltipMarkup += '<span style=\"font-size: 12px\">';\r\n                tooltipMarkup += points[0].key + '</span><br/>';\r\n\r\n                var pointsLength = points.length;\r\n                var index;\r\n                tooltipMarkup += '<table>';\r\n                for(index = 0; index < pointsLength; index += 1) {\r\n                    tooltipMarkup += '<tr>\\\r\n                                <td><span style=\"color: ' + points[index].series.color + '\">\\u25CF</span>&nbsp;</td>\\\r\n                                <td>' + points[index].series.name + '</td>\\\r\n                                <td><span>&nbsp;:&nbsp;</td>\\\r\n                                <td style=\"text-align: right;\"><strong>' +  _actualData(points[index].series.name, points[index].y) + '</strong></td>\\\r\n                            </tr>';\r\n                }\r\n                tooltipMarkup += '</table>';\r\n            }\r\n            return tooltipMarkup;\r\n        };\r\n    };\r\n\r\n    // Determine the type of formatter\r\n    var _tooltip_formatter = function () {\r\n        if(tooltip_shared) return _shared_formatter();\r\n        return _unshared_formatter();\r\n    };\r\n\r\n    // Determine to follow pointer\r\n    var _follow_pointer = function () {\r\n        if(tooltip_shared) return follow_pointer;\r\n        return false;\r\n    };\r\n\r\n    // Set tooltip parameters\r\n    var _setTooltip = function() {\r\n        if(custom_tooltip) return tooltip;\r\n        // Tooltip parameters\r\n        tooltip = {\r\n            useHTML: true,\r\n            shadow: tooltip_shadow,\r\n            shared: tooltip_shared,\r\n            split: tooltip_split,\r\n            backgroundColor: tooltip_backgroundColor,\r\n            borderColor: tooltip_borderColor,\r\n            followPointer: _follow_pointer()\r\n        };\r\n        // Use formater when tool tip is not split\r\n        if(!tooltip_split) tooltip.formatter = _tooltip_formatter();\r\n\r\n        return tooltip;\r\n    }\r\n    /** EOF TOOLTIP PARAMETERS **/\r\n\r\n    /** BOF PLOT OPTIONS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_plot_options = false;\r\n    var custom_plot_column = false;\r\n    var custom_plot_series = false;\r\n    // Plot column default variables\r\n    var plot_column = {};\r\n    var plot_column_pointPadding = 0.2;\r\n    var plot_column_borderWidth = 0;\r\n    var plot_column_pointRange = 1.4;\r\n    var plot_column_pointWidth = 5;\r\n    var plot_column_cursor ='pointer';\r\n    // Set plot column parameters\r\n    var _setPlotColumn = function () {\r\n        if(custom_plot_column) return plot_column;\r\n        // Plot column parameters\r\n        plot_column = {\r\n            pointPadding: plot_column_pointPadding,\r\n            borderWidth: plot_column_borderWidth,\r\n            pointRange: plot_column_pointRange,\r\n            pointWidth: plot_column_pointWidth,\r\n            cursor: plot_column_cursor\r\n        };\r\n    }\r\n    // plot series default variables\r\n    var plot_series = {};\r\n    var plot_series_cursor = 'pointer';\r\n    var plot_series_pointPadding = 0;\r\n    // Set plot series parameters\r\n    var _setPlotSerries = function () {\r\n        if(custom_plot_series) return plot_series;\r\n        // plot series parameters\r\n        plot_series = {\r\n            cursor: plot_series_cursor,\r\n            pointPadding: plot_series_pointPadding\r\n        };\r\n    }\r\n    // Plot options default variables\r\n    var plotOptions = {};\r\n    var _setPlotOptions = function () {\r\n        if(custom_plot_options) return plotOptions;\r\n        // Set the plot column first\r\n        _setPlotColumn();\r\n        // Set the plot serires first\r\n        _setPlotSerries();\r\n        // Plot options parameters\r\n        plotOptions = {\r\n            column: plot_column,\r\n            series: plot_series\r\n        };\r\n        return plotOptions;\r\n    }\r\n    /** EOF PLOT OPTIONS PARAMETERS **/\r\n\r\n\r\n    /** BOF SERIES PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_series = false;\r\n    var custom_series_click = false;\r\n    // Series default variables\r\n\r\n    // Set series parameters\r\n    var _setSeries = function (){\r\n        if(custom_series) return _series;\r\n        return _series;\r\n    }\r\n\r\n    /** BOF OPTIONS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_options = false;\r\n    // options default variable\r\n    var options = {};\r\n    // Set option parameters\r\n    var _setOptions = function () {\r\n        //if(custom_options) return options;\r\n        // Option parameters\r\n        options = {\r\n            chart: _setChart(),\r\n            title: _setTitle(),\r\n            subtitle: _setSubTitle(),\r\n            legend: _setLegends(),\r\n            exporting: _setExporting(),\r\n            xAxis: _setXAxis(),\r\n            yAxis: _setYAxis(),\r\n            tooltip: _setTooltip(),\r\n            plotOptions: _setPlotOptions(),\r\n            series: _setSeries()\r\n        };\r\n        _setCustomVariables2Default();\r\n        return options;\r\n    }\r\n    /** EOF OPTIONS PARAMETERS **/\r\n\r\n    // Set all flags to false after creating chart.\r\n    var _setCustomVariables2Default = function () {\r\n        custom_label = false;\r\n        custom_chart = false;\r\n        custom_title = false;\r\n        custom_sub_title = false;\r\n        custom_x_axis = false;\r\n        custom_y_axis = false;\r\n        custom_legend = false;\r\n        custom_tooltip = false;\r\n        custom_plot_options = false;\r\n        custom_plot_column = false;\r\n        custom_plot_series = false;\r\n        custom_series = false;\r\n        _series = {};\r\n        custom_series_click = false;\r\n        custom_options = false;\r\n        option = {};\r\n\r\n    }\r\n    // Initial options\r\n    var colors = [\r\n          '#315493',\r\n          '#b35d22',\r\n          '#7b7b7b',\r\n          '#c09000',\r\n          '#4374a0',\r\n          '#538233'\r\n      ];\r\n\r\n    var initOptions = function($colors){\r\n        if($colors) colors = $colors;\r\n\r\n        Highcharts.setOptions({\r\n          colors: colors,\r\n            credits: {\r\n              enabled: false\r\n            }\r\n        });\r\n    };\r\n\r\n    // Intantiate highcharts\r\n    var _create = function($id){\r\n        $('#' + $id).highcharts(_setOptions());\r\n    };\r\n\r\n    var public_method =  {\r\n        init: function($colors){\r\n            initOptions($colors);\r\n            return this;\r\n        },\r\n        setGeneralSeries: function ($all_series)\r\n        {\r\n            all_series = $all_series;\r\n            return this;\r\n        },\r\n        setGeneralCategories: function ($all_categories)\r\n        {\r\n            all_categories = $all_categories;\r\n            return this;\r\n        },\r\n        create: function($id)\r\n        {\r\n            _create($id);\r\n            return this;\r\n        },\r\n        setBaseUrl: function ($base_url)\r\n        {\r\n            base_url = $base_url;\r\n            return this;\r\n        },\r\n        setChart: function ($chart)\r\n        {\r\n            chart = $chart;\r\n            custom_chart = true;\r\n            return this;\r\n        },\r\n        setChartType: function ($chart_type)\r\n        {\r\n            chart_type = $chart_type;\r\n            return this;\r\n        },\r\n        setChartHeight: function ($chart_height)\r\n        {\r\n            chart_height = $chart_height;\r\n            return this;\r\n        },\r\n        setChartSpacingbottom: function ($chart_spacingBottom)\r\n        {\r\n            chart_spacingBottom = $chart_spacingBottom;\r\n            return this;\r\n        },\r\n        setTitle: function ($title)\r\n        {\r\n            title = $title;\r\n            custom_title = true;\r\n            return this;\r\n        },\r\n        setChartTitle: function ($chart_title)\r\n        {\r\n            chart_title = $chart_title;\r\n            return this;\r\n        },\r\n        setChartSubTitle: function ($chart_sub_title)\r\n        {\r\n            chart_sub_title = $chart_sub_title;\r\n            return this;\r\n        },\r\n        setLegendTitleText: function ($legends_title_text)\r\n        {\r\n            legends_title_text = $legends_title_text;\r\n            return this;\r\n        },\r\n        setXAxis: function ($xAxis)\r\n        {\r\n            xAxis = $xAxis;\r\n            custom_x_axis = true;\r\n            return this;\r\n        },\r\n        setXAxisCategories: function ($x_axis_categories)\r\n        {\r\n            x_axis_categories = $x_axis_categories;\r\n            return this;\r\n        },\r\n        setYAxis: function ($yAxis)\r\n        {\r\n            yAxis = $yAxis;\r\n            custom_y_axis = true;\r\n            return this;\r\n        },\r\n        setYAxisTitle: function ($y_axis_title)\r\n        {\r\n            y_axis_title = $y_axis_title;\r\n            return this;\r\n        },\r\n        setYAxisLabelEnable: function ($y_axis_label_enable)\r\n        {\r\n            y_axis_label_enable = $y_axis_label_enable;\r\n            return this;\r\n        },\r\n        setYAxisMin: function ($y_axis_min)\r\n        {\r\n            y_axis_min = $y_axis_min;\r\n            return this;\r\n        },\r\n        setTooltipShared: function ($tooltip_shared)\r\n        {\r\n            tooltip_shared = $tooltip_shared;\r\n            return this;\r\n        },\r\n        setFollowPointer: function ($follow_pointer)\r\n        {\r\n            follow_pointer = $follow_pointer;\r\n            return this;\r\n        },\r\n        setLegend: function ($legend)\r\n        {\r\n            legend = $legend;\r\n            custom_legend = true;\r\n            return this;\r\n        },\r\n        setLegendEnabled: function ($legend_enabled)\r\n        {\r\n            legend_enabled = $legend_enabled;\r\n            return this;\r\n        },\r\n        setExportingEnabled: function ($exporting_enabled)\r\n        {\r\n            exporting_enabled = $exporting_enabled;\r\n            return this;\r\n        },\r\n        setSeries: function ($series)\r\n        {\r\n            _series = $series;\r\n            custom_series = true;\r\n            return this;\r\n        },\r\n        setLegendsValue2Percent: function ($values_to_percent)\r\n        {\r\n            values_to_percent = $values_to_percent;\r\n            series_has_percent = series_has_percent.concat($values_to_percent);\r\n            return this;\r\n        },\r\n        populateActiveChart: function ($num)\r\n        {\r\n            var self = this;\r\n            self.setXAxisCategories(all_categories['slide_' + $num])\r\n                 // Set column\r\n                 .setSeries(all_series['slide_' + $num])\r\n                 // Draw the chart.\r\n                 .create('series_' + $num);\r\n        }\r\n    }\r\n\r\n    return public_method;\r\n\r\n})(jQuery);\r\n","var CONSOLIDATEDCHART = (function($)\r\n{\r\n    /** BOF GENERAL CHART DATA **/\r\n    // Base url container\r\n    var base_url = '';\r\n    var all_series = [];\r\n    var all_categories = [];\r\n    /** EOF GENERAL CHART DATA **/\r\n\r\n    /** BOF CHART PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_chart = false;\r\n    // Chart default variables\r\n    var chart = {};\r\n    var chart_type = 'column'; // Default type of chart. Range: bar, column ....\r\n    var chart_height = '500px'; // Default height of chart.\r\n    var chart_spacingBottom = 30; // Default spsace at the bottom of chart.\r\n    // Set chart parameters\r\n    var _setChart = function() {\r\n        if(custom_chart) return chart;\r\n        // Chart parameters\r\n        chart = {\r\n            type: chart_type,\r\n            height: chart_height,\r\n            spacingBottom: chart_spacingBottom\r\n        };\r\n        return chart;\r\n    }\r\n    /** EOF CHART PARAMETERS **/\r\n\r\n    /** BOF TITLE PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_title = false;\r\n    // Title dafault variables\r\n    var title = {};\r\n    var chart_title = 'Daily Graphs';\r\n    // Set title parameters\r\n    var _setTitle = function() {\r\n        if(custom_title) return title;\r\n        // Title parameters\r\n        title = {\r\n            text: chart_title\r\n        }\r\n        return title;\r\n    }\r\n    /** EOF TITLE PARAMETERS **/\r\n\r\n    /** BOF SUB TITLE PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_sub_title = false;\r\n    // Title dafault variables\r\n    var sub_title = {};\r\n    var chart_sub_title = 'Source: Unknown';\r\n    // Set title parameters\r\n    var _setSubTitle = function() {\r\n        if(custom_sub_title) return sub_title;\r\n        // Title parameters\r\n        sub_title = {\r\n            text: chart_sub_title\r\n        }\r\n        return sub_title;\r\n    }\r\n    /** EOF SUB TITLE PARAMETERS **/\r\n\r\n    /** BOF LEGENDS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_legend = false;\r\n    // Title dafault variables\r\n    var legends = {};\r\n    var legend_enabled = true; // Default for enable legend\r\n    var legends_align = 'right';\r\n    var legends_vertical_align = 'middle';\r\n    var legends_layout = 'vertical';\r\n    var legends_font_weight = 'normal';\r\n    var legends_title_text = 'Legends';\r\n    var legends_title_font_weight = 'bold';\r\n    var legends_title_font_style = 'italic';\r\n    // Set title parameters\r\n    var _setLegends = function() {\r\n        if(custom_legend) return legends;\r\n        // Title parameters\r\n        legends = {\r\n            enabled: legend_enabled,\r\n            align: legends_align,\r\n            verticalAlign: legends_vertical_align,\r\n            layout: legends_layout,\r\n            itemStyle: {\r\n                fontWeight: legends_font_weight\r\n            },\r\n            title: {\r\n                text: legends_title_text,\r\n                style: {\r\n                    fontWeight: legends_title_font_weight,\r\n                    fontStyle: legends_title_font_style\r\n                }\r\n            }\r\n        }\r\n\r\n        return legends;\r\n    }\r\n    /** EOF LEGENDS PARAMETERS **/\r\n\r\n    /** BOF EXPORTING PARAMETERS **/\r\n    var exporting = {};\r\n    // Exporting dafault variables\r\n    var exporting_enabled = true;\r\n\r\n    var _setExporting = function  () {\r\n        exporting = {\r\n            enabled: exporting_enabled\r\n        }\r\n        return exporting;\r\n    }\r\n    /** EOF EXPORTING PARAMETERS **/\r\n\r\n    /** BOF X-AXIS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_x_axis = false;\r\n    // X-axis default variables\r\n    var xAxis = {};\r\n    var x_axis_categories = [];\r\n    var xAxis_crosshair = true;\r\n    // Set x-axis parameters\r\n    var _setXAxis = function () {\r\n        if(custom_x_axis) return xAxis;\r\n        // X-axis parameters\r\n        xAxis = {\r\n            categories: x_axis_categories,\r\n            crosshair: xAxis_crosshair,\r\n            offset: 4,\r\n            lineWidth: 2\r\n        };\r\n        return xAxis;\r\n    }\r\n    /** EOF X-AXIS PARAMETERS **/\r\n\r\n    /** BOF Y-AXIS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_y_axis = false;\r\n    // Y-axis default variables\r\n    var yAxis = {};\r\n    var y_axis_title = '';\r\n    var y_axis_min = 0;\t// Default value for y axis min\r\n    var y_axis_label_enable = false;\r\n    // Set y-axis parameters\r\n    var _setYAxis = function (){\r\n        if(custom_y_axis) return yAxis;\r\n        // Y-axis parameters\r\n        yAxis = {\r\n            visible: true,\r\n            min: y_axis_min,\r\n            lineWidth: 2,\r\n            offset: 4,\r\n            tickWidth: 1,\r\n            title: {\r\n                text: y_axis_title\r\n            },\r\n            labels: {\r\n                enabled: y_axis_label_enable\r\n            },\r\n        };\r\n        return yAxis;\r\n    }\r\n    /** EOF Y-AXIS PARAMETERS **/\r\n\r\n    /** BOF TOOLTIP PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_tooltip = false;\r\n    // Tooltip default variables\r\n    var values_to_percent = [];\r\n    var series_has_percent = ['Margin'];\r\n    var tooltip = {};\r\n    var headerFormat = '<span style=\"font-size:10px\">{point.key}</span><table>';\r\n    var pointFormat = '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>';\r\n    var footerFormat = '</table>';\r\n    var tooltip_shared = false;\r\n    var tooltip_shadow = false;\r\n    var tooltip_split = false;\r\n    var follow_pointer = false;\r\n    var tooltip_backgroundColor = '#EEEEEE';\r\n    var tooltip_borderColor = '#286090';\r\n\r\n    // Percentage extension when\r\n    var _point_extension = function ($series_name) {\r\n        return ($.inArray($series_name ,series_has_percent) != -1) ? ' %' : '';\r\n    };\r\n\r\n    // Display actual data of converted value to percentage.\r\n    var _actualData = function ($series_name, $yAxisData){\r\n        // reverse the formula to get actual data.\r\n        var actual_data = ($.inArray($series_name ,values_to_percent) != -1 && $yAxisData > 0) ? (($yAxisData - 100) / 100) : $yAxisData;\r\n        // Add percent sign\r\n        if($series_name.toLowerCase() == 'margin') actual_data = actual_data + ' &#37;';\r\n\r\n        return actual_data;\r\n    }\r\n    // Formatter for unshared tooltip\r\n    var _unshared_formatter = function () {\r\n        return function() {\r\n            return '<span style=\"font-size:10px\">' + this.x + '</span><table>\\\r\n                    <tr><td style=\"color:' + this.series.color + ';padding:0\">' + this.series.name + ': </td>\\\r\n                    <!-- <td style=\"padding:0\"><b>' + this.y + _point_extension(this.series.name) + '</b></td></tr> -->\\\r\n                    <td style=\"padding:0\"><b>' + _actualData(this.series.name, this.y) + '</b></td></tr>\\\r\n                    </table>';\r\n\r\n        };\r\n    };\r\n    // Formatter for shared tooltip\r\n    var _shared_formatter = function () {\r\n        return function() {\r\n            var tooltipMarkup = '';\r\n            points = this.points;\r\n            if(this.points) {\r\n                tooltipMarkup += '<span style=\"font-size: 12px\">';\r\n                tooltipMarkup += points[0].key + '</span><br/>';\r\n\r\n                var pointsLength = points.length;\r\n                var index;\r\n                tooltipMarkup += '<table>';\r\n                for(index = 0; index < pointsLength; index += 1) {\r\n                    tooltipMarkup += '<tr>\\\r\n                                <td><span style=\"color: ' + points[index].series.color + '\">\\u25CF</span>&nbsp;</td>\\\r\n                                <td>' + points[index].series.name + '</td>\\\r\n                                <td><span>&nbsp;:&nbsp;</td>\\\r\n                                <td style=\"text-align: right;\"><strong>' +  _actualData(points[index].series.name, points[index].y) + '</strong></td>\\\r\n                            </tr>';\r\n                }\r\n                tooltipMarkup += '</table>';\r\n            }\r\n            return tooltipMarkup;\r\n        };\r\n    };\r\n\r\n    // Determine the type of formatter\r\n    var _tooltip_formatter = function () {\r\n        if(tooltip_shared) return _shared_formatter();\r\n        return _unshared_formatter();\r\n    };\r\n\r\n    // Determine to follow pointer\r\n    var _follow_pointer = function () {\r\n        if(tooltip_shared) return follow_pointer;\r\n        return false;\r\n    };\r\n\r\n    // Set tooltip parameters\r\n    var _setTooltip = function() {\r\n        if(custom_tooltip) return tooltip;\r\n        // Tooltip parameters\r\n        tooltip = {\r\n            useHTML: true,\r\n            shadow: tooltip_shadow,\r\n            shared: tooltip_shared,\r\n            split: tooltip_split,\r\n            backgroundColor: tooltip_backgroundColor,\r\n            borderColor: tooltip_borderColor,\r\n            followPointer: _follow_pointer()\r\n        };\r\n        // Use formater when tool tip is not split\r\n        if(!tooltip_split) tooltip.formatter = _tooltip_formatter();\r\n\r\n        return tooltip;\r\n    }\r\n    /** EOF TOOLTIP PARAMETERS **/\r\n\r\n    /** BOF PLOT OPTIONS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_plot_options = false;\r\n    var custom_plot_column = false;\r\n    var custom_plot_series = false;\r\n    // Plot column default variables\r\n    var plot_column = {};\r\n    var plot_column_pointPadding = 0.2;\r\n    var plot_column_borderWidth = 0;\r\n    var plot_column_pointRange = 1.4;\r\n    var plot_column_pointWidth = 5;\r\n    var plot_column_cursor ='pointer';\r\n    // Set plot column parameters\r\n    var _setPlotColumn = function () {\r\n        if(custom_plot_column) return plot_column;\r\n        // Plot column parameters\r\n        plot_column = {\r\n            pointPadding: plot_column_pointPadding,\r\n            borderWidth: plot_column_borderWidth,\r\n            pointRange: plot_column_pointRange,\r\n            pointWidth: plot_column_pointWidth,\r\n            cursor: plot_column_cursor\r\n        };\r\n    }\r\n    // plot series default variables\r\n    var plot_series = {};\r\n    var plot_series_cursor = 'pointer';\r\n    var plot_series_pointPadding = 0;\r\n    // Set plot series parameters\r\n    var _setPlotSerries = function () {\r\n        if(custom_plot_series) return plot_series;\r\n        // plot series parameters\r\n        plot_series = {\r\n            cursor: plot_series_cursor,\r\n            pointPadding: plot_series_pointPadding\r\n        };\r\n    }\r\n    // Plot options default variables\r\n    var plotOptions = {};\r\n    var _setPlotOptions = function () {\r\n        if(custom_plot_options) return plotOptions;\r\n        // Set the plot column first\r\n        _setPlotColumn();\r\n        // Set the plot serires first\r\n        _setPlotSerries();\r\n        // Plot options parameters\r\n        plotOptions = {\r\n            column: plot_column,\r\n            series: plot_series\r\n        };\r\n        return plotOptions;\r\n    }\r\n    /** EOF PLOT OPTIONS PARAMETERS **/\r\n\r\n\r\n    /** BOF SERIES PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_series = false;\r\n    var custom_series_click = false;\r\n    // Series default variables\r\n\r\n    // Set series parameters\r\n    var _setSeries = function (){\r\n        if(custom_series) return _series;\r\n        return _series;\r\n    }\r\n\r\n    /** BOF OPTIONS PARAMETERS **/\r\n    // Flag for not using the custom variables, if set to false the default value of variables below will be used..\r\n    var custom_options = false;\r\n    // options default variable\r\n    var options = {};\r\n    // Set option parameters\r\n    var _setOptions = function () {\r\n        //if(custom_options) return options;\r\n        // Option parameters\r\n        options = {\r\n            chart: _setChart(),\r\n            title: _setTitle(),\r\n            subtitle: _setSubTitle(),\r\n            legend: _setLegends(),\r\n            exporting: _setExporting(),\r\n            xAxis: _setXAxis(),\r\n            yAxis: _setYAxis(),\r\n            tooltip: _setTooltip(),\r\n            plotOptions: _setPlotOptions(),\r\n            series: _setSeries()\r\n        };\r\n        _setCustomVariables2Default();\r\n        return options;\r\n    }\r\n    /** EOF OPTIONS PARAMETERS **/\r\n\r\n    // Set all flags to false after creating chart.\r\n    var _setCustomVariables2Default = function () {\r\n        custom_label = false;\r\n        custom_chart = false;\r\n        custom_title = false;\r\n        custom_sub_title = false;\r\n        custom_x_axis = false;\r\n        custom_y_axis = false;\r\n        custom_legend = false;\r\n        custom_tooltip = false;\r\n        custom_plot_options = false;\r\n        custom_plot_column = false;\r\n        custom_plot_series = false;\r\n        custom_series = false;\r\n        _series = {};\r\n        custom_series_click = false;\r\n        custom_options = false;\r\n        option = {};\r\n\r\n    }\r\n    // Initial options\r\n    var colors = [\r\n          '#315493',\r\n          '#b35d22',\r\n          '#7b7b7b',\r\n          '#c09000',\r\n          '#4374a0',\r\n          '#538233'\r\n      ];\r\n\r\n    var initOptions = function($colors){\r\n        if($colors) colors = $colors;\r\n\r\n        Highcharts.setOptions({\r\n          colors: colors,\r\n            credits: {\r\n              enabled: false\r\n            }\r\n        });\r\n    };\r\n\r\n    // Intantiate highcharts\r\n    var _create = function($id){\r\n        $('#' + $id).highcharts(_setOptions());\r\n    };\r\n\r\n    var public_method =  {\r\n        init: function($colors){\r\n            initOptions($colors);\r\n            return this;\r\n        },\r\n        setGeneralSeries: function ($all_series)\r\n        {\r\n            all_series = $all_series;\r\n            return this;\r\n        },\r\n        setGeneralCategories: function ($all_categories)\r\n        {\r\n            all_categories = $all_categories;\r\n            return this;\r\n        },\r\n        create: function($id)\r\n        {\r\n            _create($id);\r\n            return this;\r\n        },\r\n        setBaseUrl: function ($base_url)\r\n        {\r\n            base_url = $base_url;\r\n            return this;\r\n        },\r\n        setChart: function ($chart)\r\n        {\r\n            chart = $chart;\r\n            custom_chart = true;\r\n            return this;\r\n        },\r\n        setChartType: function ($chart_type)\r\n        {\r\n            chart_type = $chart_type;\r\n            return this;\r\n        },\r\n        setChartHeight: function ($chart_height)\r\n        {\r\n            chart_height = $chart_height;\r\n            return this;\r\n        },\r\n        setChartSpacingbottom: function ($chart_spacingBottom)\r\n        {\r\n            chart_spacingBottom = $chart_spacingBottom;\r\n            return this;\r\n        },\r\n        setTitle: function ($title)\r\n        {\r\n            title = $title;\r\n            custom_title = true;\r\n            return this;\r\n        },\r\n        setChartTitle: function ($chart_title)\r\n        {\r\n            chart_title = $chart_title;\r\n            return this;\r\n        },\r\n        setChartSubTitle: function ($chart_sub_title)\r\n        {\r\n            chart_sub_title = $chart_sub_title;\r\n            return this;\r\n        },\r\n        setLegendTitleText: function ($legends_title_text)\r\n        {\r\n            legends_title_text = $legends_title_text;\r\n            return this;\r\n        },\r\n        setXAxis: function ($xAxis)\r\n        {\r\n            xAxis = $xAxis;\r\n            custom_x_axis = true;\r\n            return this;\r\n        },\r\n        setXAxisCategories: function ($x_axis_categories)\r\n        {\r\n            x_axis_categories = $x_axis_categories;\r\n            return this;\r\n        },\r\n        setYAxis: function ($yAxis)\r\n        {\r\n            yAxis = $yAxis;\r\n            custom_y_axis = true;\r\n            return this;\r\n        },\r\n        setYAxisTitle: function ($y_axis_title)\r\n        {\r\n            y_axis_title = $y_axis_title;\r\n            return this;\r\n        },\r\n        setYAxisLabelEnable: function ($y_axis_label_enable)\r\n        {\r\n            y_axis_label_enable = $y_axis_label_enable;\r\n            return this;\r\n        },\r\n        setYAxisMin: function ($y_axis_min)\r\n        {\r\n            y_axis_min = $y_axis_min;\r\n            return this;\r\n        },\r\n        setTooltipShared: function ($tooltip_shared)\r\n        {\r\n            tooltip_shared = $tooltip_shared;\r\n            return this;\r\n        },\r\n        setFollowPointer: function ($follow_pointer)\r\n        {\r\n            follow_pointer = $follow_pointer;\r\n            return this;\r\n        },\r\n        setLegend: function ($legend)\r\n        {\r\n            legend = $legend;\r\n            custom_legend = true;\r\n            return this;\r\n        },\r\n        setLegendEnabled: function ($legend_enabled)\r\n        {\r\n            legend_enabled = $legend_enabled;\r\n            return this;\r\n        },\r\n        setExportingEnabled: function ($exporting_enabled)\r\n        {\r\n            exporting_enabled = $exporting_enabled;\r\n            return this;\r\n        },\r\n        setSeries: function ($series)\r\n        {\r\n            _series = $series;\r\n            custom_series = true;\r\n            return this;\r\n        },\r\n        setLegendsValue2Percent: function ($values_to_percent)\r\n        {\r\n            values_to_percent = $values_to_percent;\r\n            series_has_percent = series_has_percent.concat($values_to_percent);\r\n            return this;\r\n        },\r\n        populateActiveChart: function ($num)\r\n        {\r\n            var self = this;\r\n            self.setXAxisCategories(all_categories['slide_' + $num])\r\n                 // Set column\r\n                 .setSeries(all_series['slide_' + $num])\r\n                 // Draw the chart.\r\n                 .create('series_' + $num);\r\n        }\r\n    }\r\n\r\n    return public_method;\r\n\r\n})(jQuery);\r\n"]}